// trick to reveal test case on codeforces
# include <bits/stdc++.h>

using namespace std;

void burn ()
{
    int n, k, val;
    cin >> n >> k;
    for (int i = 0; i < n - 1; i++)
        cin >> val;
    return;
}

void reveal ()
{
    int n, k, val;
    cin >> n >> k;
    cout << n << ' ' << k << '\n';
    for (int i = 0; i < n - 1; i++)
    {
        cin >> val;
        cout << val << ' ';
    }
    cout << '\n';
    return;
}

int main ()
{
    int t;
    cin >> t;
    if (t == 5)
    {
        cout << "2\n1\n5\n3\n1\n";
        return 0;
    }
    for (int i = 0; i < 1980; i++)
        burn();
    reveal();
    return 0;
}

f(x)=∑i=1N(x+Ai−min(Ai,2x))=∑i=1N(x+Ai−(Ai+2x−abs(Ai−2x))/2)
f′(x)=∑i=1N2x−Aiabs(2x−Ai)

 
// GCC Optimizations
#pragma GCC optimize("Ofast")
#pragma GCC target("fma,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#pragma GCC optimize("unroll-loops")
 
// Constants
constexpr long long SZ = 1e5 + 7;
constexpr long long inf = 5e18;
constexpr long long mod = 1e9 + 7;
constexpr long long MOD = 998244353;

#define pq             priority_queue<int>
#define setbits(x)      __builtin_popcountll(x)
#define pi              3.14159265358979323846
const ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;
#define inf             2000000000000000000
#define sp(x,y)    fixed << setprecision(x) << y   
#define mem(arr,x) memset(arr,x,sizeof(arr))
#define trace(i,a) for(auto i : a) cout << i << " "; 
#define mtrace(i,a) for(auto i : a)  cout<<i.ff<<" "<<i.ss<<endl;
#define deb(x)  cerr<<#x<<" = "<<x<<ln;
#pragma GCC target ("sse4.2")
priority_queue<int , vii , greater<int>>

template <typename T> istream& operator >> (istream &in , vector<T> &v) { for(auto &i: v) cin>>i; return in; }
template <typename T1 , typename T2> istream& operator >> (istream &in , pair<T1 , T2> &p) { cin>>p.f>>p.s; return in; }
template <typename T> ostream& operator << (ostream &out , vector<T> &v) { for(auto &i: v) cout<<i<<" "; return out; }
template <typename T1 , typename T2> ostream& operator << (ostream &out , pair<T1 , T2> &p) { cout<<p.f<<" "<<p.s<<" "; return out; }

__builtin_clzll(x): This function is used to count the leading zeros of the integer. Note : clz = count leading zero’s
__builtin_ctzll(x): This function is used to count the trailing zeros of the given integer. Note : ctz = count trailing zeros.

//1.integer overflow (1e5 * 1e5) (2e9 + 2e9)

//***********for policy based data structure**************
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
//It is a namespace necessary for the GNU based Policy based data structures.
  
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
About ordered set

Ordered set is a policy based data structure in g++ that keeps the unique elements in sorted order. It performs all the operations as performed by the set data structure in STL in log(n) complexity and performs two additional operations also in log(n) complexity .

order_of_key (k) : Number of items strictly smaller than k .
find_by_order(k) : K-th element in a set (counting from zero).

typedef long double ld;

const double EPS = 1e-9;
const double PI = acos(-1.0);
const int MOD = 1000 * 1000 * 1000 + 7;
const int INF = 2000 * 1000 * 1000;


//************************************
sort(s.begin(), s.end(), [&] (const string &s, const string &t) {
		return s.size() < t.size();
	});

bool sortbysec(pair<int ,int> &a , pair<int , int> &b)
{
        return a.ss > b.ss;
}

bool sortbydiff(pair<int, int> &a , pair<int , int> &b)
{
    return a.ff-a.ss > b.ff-b.ss;
}

template<class A> void read(vector<A>& v);
template<class A, size_t S> void read(array<A, S>& a);
template<class T> void read(T& x) {
	cin >> x;
}
void read(double& d) {
	string t;
	read(t);
	d = stod(t);
}
void read(long double& d) {
	string t;
	read(t);
	d = stold(t);
}
template<class H, class... T> void read(H& h, T&... t) {
	read(h);
	read(t...);
}
template<class A> void read(vector<A>& x) {
	for (auto &a : x)
		read(a);
}
template<class A, size_t S> void read(array<A, S>& x) {
	for (auto &a : x)
		read(a);
}

//#define MULTITEST
 
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
 
template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}
 
template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}
 
mt19937 rnd(time(NULL));
 
const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = int(1e9) + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);
 
const int N = 100 * 1000 + 13;




//  nhi samajh aayega

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;
 
#ifdef MULTITEST
	int tc;
	scanf("%d", &tc);
	while(tc--){
		read();
#else
	while(read()) {	
#endif
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif
 
	}
}

const int entered = 1 , wait = 0;
const int lef = 2;


#include<bits/stdc++.h>
#include <ctime>
#include <iostream>
#include <unordered_map>
using namespace std;

const int N = 2e5;
struct custom_hash {
    static uint64_t splitmix64(uint64_t x) {
        // http://xorshift.di.unimi.it/splitmix64.c
        x += 0x9e3779b97f4a7c15;
        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;
        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;
        return x ^ (x >> 31);
    }
    size_t operator()(uint64_t x) const {
        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();
        return splitmix64(x + FIXED_RANDOM);
    }
};
void insert_numbers(long long x) {
    clock_t begin = clock();
    unordered_map<long long, int, custom_hash> numbers;

    for (int i = 1; i <= N; i++)
        numbers[i * x] = i;

    long long sum = 0;

    for (auto &entry : numbers)
        sum += (entry.first / x) * entry.second;

    printf("x = %lld: %.3lf seconds, sum = %lld\n", x, (double) (clock() - begin) / CLOCKS_PER_SEC, sum);
}

int main() {
    insert_numbers(107897);
    insert_numbers(126271);
}


// ************ floating point comparison**************//
bool approximatelyEqual(float a, float b)
{
    return fabs(a - b) <= ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * 1e-12 );
}

bool Equal(float a, float b)
{
    return fabs(a - b) <= ( (fabs(a) > fabs(b) ? fabs(b) : fabs(a)) * 1e-12 );
}

bool GreaterThan(float a, float b)
{
    return (a - b) > ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * 1e-12 );
}

bool LessThan(float a, float b)
{
    return (b - a) > ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * 1e-12 );
}

bool eq(double a, double b) 
{ 
    return (abs(a - b) < 1e-9);
} 
bool gr(double a, double b) 
{ 
    return ((a - b) > 0.0) ;
} 
bool sm(double a, double b) 
{ 
    return ((a - b) < 0.0) ;
} 



{
	
	 "default": {
	 	"prefix": [
			 "sachin"
			],
	 	"body": [
			"#include<bits/stdc++.h>",
			"#pragma GCC target (\"sse4.2\")",
			"using namespace std;",
			"//#include <ext/pb_ds/assoc_container.hpp>",
			"//#include <ext/pb_ds/tree_policy.hpp>",
			"//using namespace __gnu_pbds;", 
			"#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>",
			"#define ll long long int",
			"#define ld long double",
			"#define fon(i,n) for(int i=0;i<n;i++)",
			"#define fo(i,n) for(int i=1;i<=n;i++)",
			"#define pb push_back",
			"#define mp make_pair",
			"#define eb emplace_back",
			"#define ff first",
			"#define ss second",
			"#define pii pair<int,int>",
			"#define pll pair<ll ,ll>",
			"#define vii vector<int>",
			"#define vll vector<ll>",
			"#define vvii vector<vii>",
			"#define vvll vector<vll>",
			"#define vpii vector<pii>",
			"#define vpll vector<pll>",
			"#define bs binary_search",
			"#define lb lower_bound",
			"#define ub upper_bound",
			"#define setbits(x) __builtin_popcountll(x)",
			"#define M (1000*1000*1000+7)",
			"#define endl \"\\n\"",
			"#define test ll T; cin>>T; while(T--)",
			"#define all(z) z.begin() , z.end()",
			"#define allr(z) z.rbegin() , z.rend()",
			"#define sp(x,y)   fixed << setprecision(x) << y",   
			"#define memo(oo , zz) memset(oo , zz , sizeof(oo))",
			"void __print(int x) {cerr << x;}",
            "void __print(long x) {cerr << x;}",
            "void __print(long long x) {cerr << x;}",
            "void __print(unsigned x) {cerr << x;}",
            "void __print(unsigned long x) {cerr << x;}",
            "void __print(unsigned long long x) {cerr << x;}",
            "void __print(float x) {cerr << x;}",
            "void __print(double x) {cerr << x;}",
            "void __print(long double x) {cerr << x;}",
            "void __print(char x) {cerr << '\\'' << x << '\\'';}",
            "void __print(const char *x) {cerr << '\\\"' << x << '\\\"';}",
            "void __print(const string &x) {cerr << '\\\"' << x << '\\\"';}",
            "void __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n",
            "template<typename T, typename V>",
            "void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}",
            "template<typename T>",
            "void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}",
            "void _print() {cerr << \"]\\n\";}",
            "template <typename T, typename... V>",
            "void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}",
            "#ifndef ONLINE_JUDGE",
            "#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)",
            "#else",
            "#define debug(x...)",
            "#endif",
			"// ===================================================================\n",

			"ll gcd(ll a , ll b){",
			"\treturn __gcd(a , b);}\n",
			"ll lcm(ll a , ll b){",
			"\treturn (a*b)/__gcd(a , b);}\n",
			"ll mod(ll x){",
			"\treturn ((x % M + M) % M);}\n",
			"ll add(ll a , ll b){",
			"\treturn (((a + b) % M + M)%M);}\n",
			"ll mul(ll a , ll b){",
			"\treturn (((a * b) % M + M) % M);}\n",
			"bool sortbysec(pair<int ,int> &a , pair<int , int> &b)",
            "{",
            "\treturn a.ss > b.ss;",
            "}\n",
			"const int maxn = 1e5;",
			"void solve()",
			"{",
			"    $2",
			"}",
			"int main()",
			"{",
				"   ios_base::sync_with_stdio(false);",
				"   cin.tie(NULL);",
				"   test",
				"   {",
				"      solve();",
				"   }",
			"}",
	 		//"console.log('$1');",
	 	],
	 	"description": "Log output to console"
	 }
}
